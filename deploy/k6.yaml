apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
data:
  loadtest.js: |
    import http from 'k6/http';
    import { check } from 'k6';

    export const options = {
    discardResponseBodies: true,
    scenarios: {
        sendRequest: {
            exec: 'sendRequest',
            executor: 'constant-arrival-rate',
            duration: '10s',
            rate: 20,
            timeUnit: '1s',
            preAllocatedVUs: 5,
            maxVUs: 50,
          }
        }
    };

    export function sendRequest() {
      const url = 'http://service-a-grpc:5000/hello?name=User';
      const res = http.get(url);

      check(res, {
        'is status 200': (r) => r.status === 200,
      });
    }

---
apiVersion: v1
kind: Pod
metadata:
  name: k6-load-test
spec:
  containers:
    - name: k6
      image: loadimpact/k6 # Official K6 docker image
      command: ["sleep", "infinity"]
      securityContext:
        runAsUser: 0 # Run as root
      volumeMounts:
        - name: k6-scripts
          mountPath: /scripts
  volumes:
    - name: k6-scripts
      configMap:
        name: k6-scripts
